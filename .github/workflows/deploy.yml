      - name: Deploy to server
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USERNAME }}
          APP_DIR: /ci_cd
          PORT: ${{ secrets.PORT }}
          DB_URI: ${{ secrets.DB_URI }}
          EMAIL: ${{ secrets.EMAIL }}
          APP_PASS: ${{ secrets.APP_PASS }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DOMAIN: ${{ secrets.DOMAIN }}
          CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
        run: |
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          # Debugging: Set -x to log commands
          ssh $USER@$HOST 'bash -s' <<'ENDSSH'
          set -eux  # Enable command logging and exit on error
          APP_DIR="/ci_cd"
          mkdir -p $APP_DIR
          cd $APP_DIR

          if [ ! -d ".git" ]; then
            git clone https://github.com/murodismo/cicd.git .
          else
            git pull origin main
          fi

          # Write the .env file with the provided variables
          cat <<EOF > .env
          PORT=${PORT}
          DB_URI=${DB_URI}
          EMAIL=${EMAIL}
          APP_PASS=${APP_PASS}
          JWT_SECRET=${JWT_SECRET}
          DOMAIN=${DOMAIN}
          CLOUDINARY_URL=${CLOUDINARY_URL}
          CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
          CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
          CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
          EOF

          npm install
          npm run build || { echo "Build failed"; exit 1; }

          if pm2 list | grep -q "ci_cd_app"; then
            pm2 restart ci_cd_app
          else
            pm2 start dist/main.js --name ci_cd_app
          fi

          pm2 save || { echo "PM2 save failed"; exit 1; }
          ENDSSH
        shell: bash